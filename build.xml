<?xml version="1.0" encoding="UTF-8"?>
<!--
License (BSD Style License):
Copyright (c) 2009, 2011
Software Technology Group
Department of Computer Science
Technische Universität Darmstadt
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
- Neither the name of the Software Technology Group or Technische
  Universität Darmstadt nor the names of its contributors may be used to
  endorse or promote products derived from this software without specific
  prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

Author 	Thomas Schlosser
-->
<project name="Clusters" default="default" basedir=".">
	<description>Builds the Clusters project.</description>

	<!--
		Read user properties from build.properties.
 		Use this mechanism to set your own "scala.home".
	-->
	<property file="build.properties" />

	<!-- General properties -->
	<property name="version" value="1.6.ALPHA" />


	<!-- Directories which contain the project's source files. -->
	<property name="src.main.dir" value="src/main" />
	<property name="src.test.dir" value="src/test" />

	<!-- Directories where the generated code is stored. -->
	<property name="build.dir" value="build" />
	<property name="class.dir" value="${build.dir}/class" />
	<property name="doc.dir" value="${build.dir}/doc" />


	<!-- Libraries & tools used at compile- and or run-time. -->
	<property name="lib.dir" value="lib" />

	<!-- Sets "scala.home" to the default directory, if no "build.properties" file exists. -->
	<condition property="scala.home" value="/opt/local/share/scala-2.9/">
		<not>
			<isset property="scala.home" />
		</not>
	</condition>
	<echo message="The Scala Home directory is set to: ${scala.home}" />
	<!-- Sets "scala.lib" to the default directory, if no "build.properties" file exists. -->
	<condition property="scala.lib" value="${scala.home}/lib/">
		<not>
			<isset property="scala.lib" />
		</not>
	</condition>
	<echo message="The Scala Lib directory is set to: ${scala.lib}" />
	<property name="scala-compiler.jar" value="${scala.lib}/scala-compiler.jar" />
	<property name="scala-library.jar" value="${scala.lib}/scala-library.jar" />

	<property name="bat.jar" value="${lib.dir}/bat-1.6.0.RC1.jar" />
	<property name="commons-lang.jar" value="${lib.dir}/commons-lang3-3.1.jar" />
	<property name="graphclustering.jar" value="${lib.dir}/graphclustering.jar" />
	<property name="scalatest.jar" value="${lib.dir}/scalatest-1.6.1.jar" />
	<property name="junit.jar" value="${lib.dir}/junit-4.10.jar" />

	<!-- Configuration of the "path"s. -->
	<path id="scala.classpath">
		<pathelement location="${scala-compiler.jar}" />
		<pathelement location="${scala-library.jar}" />
	</path>
	<path id="project.classpath">
		<path refid="scala.classpath" />
		<pathelement location="${class.dir}" />
		<pathelement location="${bat.jar}" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${graphclustering.jar}" />
	</path>
	<path id="test.classpath">
		<path refid="project.classpath" />
		<pathelement location="${scalatest.jar}" />
		<pathelement location="${junit.jar}" />
	</path>

	<!-- Definition of additional tasks used to generate / compile Clusters. -->
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath refid="scala.classpath" />
	</taskdef>
	<taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestAntTask">
		<classpath refid="test.classpath" />
	</taskdef>

	<!-- Definition of all targets. -->

	<target name="init"
	        description="Creates the initial directory structure where the generated / compiled files are stored.">
		<tstamp />
		<mkdir dir="${class.dir}" />
		<mkdir dir="${doc.dir}" />
	</target>

	<target name="clean" description="Cleans up all artifacts that can be regenerated.">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" depends="init" description="Compiles Clusters.">
		<echo>
		Note, if compilation fails due to a stack overflow error it is necessary
		to increase Java's heap and stack size. E.g. if you use Unix just set
		ANT_OPTS before calling "ant compile"; e.g.,
			export ANT_OPTS="-Xmx1024m -Xss128m"
		</echo>

		<!-- The attribute "optimise='on'" is not very useful during development
			 since it requires to basically recompile the complete project after
			 every single (minor) source code change.
		-->
		<scalac target="jvm-1.5"
		        destdir="${class.dir}"
		        classpathref="project.classpath"
		        deprecation="on"
		        scalacdebugging="on"
		        unchecked="yes"
		        force="changed">
			<src path="${src.main.dir}" />
			<include name="**/*.scala" />
			<include name="**/*.java" />
		</scalac>

		<javac srcdir="${src.main.dir}" destdir="${class.dir}" debug="on" source="1.5" />
	</target>

	<target name="compile-tests" depends="compile" description="Compiles Clusters' test suite.">
		<scalac srcdir="${src.test.dir}"
		        target="jvm-1.5"
		        destdir="${class.dir}"
		        classpathref="test.classpath"
				addparams="-g:vars"
		        deprecation="on"
		        scalacdebugging="on"
		        force="true">
			<include name="**/*.scala" />
		</scalac>
	</target>

	<target name="api-doc" depends="compile" description="Generates Clusters' API documentation.">
		<!-- TODO java doc... -->
		<scaladoc destdir="${doc.dir}"
		          deprecation="yes"
		          unchecked="yes"
		          doctitle="The Software Architecture Reverse Engineering Library: Clusters - Version ${version}"
		          classpathref="project.classpath">
			<src path="${src.main.dir}" />
			<include name="**/*.scala" />
		</scaladoc>
	</target>

	<target name="package" depends="compile" description="Packages Clusters.">
		<jar destfile="${build.dir}/clusters-${version}.jar" basedir="${class.dir}" />
	</target>

	<target name="default"
	        depends="compile,compile-tests,api-doc,package"
	        description="Compiles and packages Clusters." />

</project>
